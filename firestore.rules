rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 기본 규칙: 인증된 사용자만 읽기/쓰기 가능
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // 테스트 통계 컬렉션
    match /testStats/{docId} {
      allow read: if true; // 모든 사용자가 조회 가능
      allow write: if request.auth != null; // 인증된 사용자만 수정 가능
    }

    // 테스트 결과 컬렉션
    match /results/{resultId} {
      allow read: if true; // 공유를 위해 모든 사용자가 조회 가능
      allow create: if request.auth != null; // 인증된 사용자만 생성 가능
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId; // 본인 결과만 수정/삭제 가능
    }

    // 댓글 컬렉션
    match /comments/{commentId} {
      // 모든 사용자가 댓글 조회 가능
      allow read: if true;
      
      // 댓글 생성: 인증된 사용자 또는 익명 사용자 (authorId가 null인 경우)
      allow create: if (request.auth != null && request.auth.uid == request.resource.data.authorId) ||
                       (request.resource.data.authorId == null && request.resource.data.authorName != null);
      
      // 댓글 수정: 작성자만 가능
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.authorId ||
                        // 좋아요/싫어요 업데이트는 모든 인증된 사용자 가능
                        isVoteUpdate() ||
                        // 신고 관련 업데이트
                        isReportUpdate());
      
      // 댓글 삭제: 작성자 또는 관리자만 가능
      allow delete: if request.auth != null && 
                       (request.auth.uid == resource.data.authorId ||
                        isAdmin());

      // 좋아요/싫어요 업데이트인지 확인하는 함수
      function isVoteUpdate() {
        let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
        return affectedKeys.hasOnly(['likedBy', 'dislikedBy', 'likes', 'dislikes']);
      }

      // 신고 관련 업데이트인지 확인하는 함수  
      function isReportUpdate() {
        let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
        return affectedKeys.hasOnly(['isReported', 'reportCount']);
      }

      // 관리자 권한 확인 함수
      function isAdmin() {
        return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      }
    }

    // 댓글 신고 컬렉션
    match /commentReports/{reportId} {
      allow read: if request.auth != null && isAdmin(); // 관리자만 조회 가능
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.reporterId; // 신고자만 생성 가능
      allow update, delete: if request.auth != null && isAdmin(); // 관리자만 수정/삭제 가능
    }

    // 사용자 프로필 컬렉션
    match /users/{userId} {
      allow read: if true; // 모든 사용자가 조회 가능 (공개 프로필 정보)
      allow write: if request.auth != null && request.auth.uid == userId; // 본인만 수정 가능
    }

    // 관리자 컬렉션
    match /admins/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId; // 본인 관리자 권한만 확인 가능
      allow write: if false; // 관리자 권한은 서버에서만 부여 가능
    }
  }
} 